# helm-base/templates/deployment.yaml v1.0.0
# Template for the main Deployment resource.
{{- if not .Values.rollout.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
spec:
  replicas: 1
  {{- if eq .Values.enableRecreateStrategy true }}
  strategy:
    type: Recreate
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        {{- if .Values.serviceAccount }}
        azure.workload.identity/use: "true"
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config-map.yaml") . | sha256sum }}
    spec:
      {{- if .Values.serviceAccount }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      {{- if .Values.initContainer.enabled }}
      {{- with .Values.initContainer }}
      initContainers:
        - name: init
          image: {{ .image }}:{{ .version }}
          imagePullPolicy: Always
          {{- if or .configuration .secrets .additionalSecretRef }}
          envFrom:
            {{- if .configuration }}
            - configMapRef:
                name: {{ $.Values.name }}-init-config
            {{- end }}
            {{- if .secrets }}
            - secretRef:
                name: {{ $.Values.name }}-init-secrets
            {{- end }}
            {{- if .additionalSecretRef }}
            {{- toYaml .additionalSecretRef | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if or .volumeMounts .mountFiles }}
          volumeMounts:
            {{- with .volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .mountFiles }}
            {{- range .mountFiles }}
            - name: {{ .name }}
              mountPath: {{ .path }}
              subPath: {{ .name }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- if .command }}
          command:
            {{- range .command }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          {{- if .args }}
          args: {{ .args | toJson }}
          {{- end }}
          {{- if .resources }}
          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- with .livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- end }}
      {{- end }}
      containers:
        {{- with .Values.app }}
        - name: app
          image: {{ .registry }}/{{ .image }}:{{ .version }}
          imagePullPolicy: Always
          {{- if or (or .configuration .secretRef) (or .secretStoreRef .secrets) }}
          envFrom:
            {{- if .configuration }}
            - configMapRef:
                name: {{ $.Values.name }}-app-config
            {{- end }}
            {{- if .secretRef }}
            - secretRef:
                name: {{ .secretName }}
            {{- end }}
            {{- if .secrets }}
            - secretRef:
                name: {{ $.Values.name }}-secrets
            {{- end }}
          {{- end }}
          {{- if or .volumeMounts .mountFiles }}
          volumeMounts:
            {{- with .volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .mountFiles }}
            {{- range .mountFiles }}
            - name: {{ .name }}
              mountPath: {{ .path }}
              subPath: {{ .name }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- if .command }}
          command:
            {{- range .command }}
            - {{ . | default "" | quote }}
            {{- end }}
          {{- end }}
          {{- if .args }}
          args:
            {{- range .args }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}

        {{- if .Values.additionalContainers }}
        {{- range $name, $container := .Values.additionalContainers }}
        - name: {{ $name }}
          image: {{ $container.image }}:{{ $container.version }}
          imagePullPolicy: Always
          {{- if $container.configuration }}
          envFrom:
            - configMapRef:
                name: {{ $.Values.name }}-{{ $name }}-config
          {{- end }}
          {{- if or $container.volumeMounts $container.mountFiles }}
          volumeMounts:
            {{- with $container.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if $container.mountFiles }}
            {{- range $container.mountFiles }}
            - name: {{ .name }}
              mountPath: {{ .path }}
              subPath: {{ .name }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- if $container.command }}
          command:
            {{- range $container.command }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          {{- if $container.args }}
          args:
            {{- range $container.args }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          {{- with $container.resources }}
          resources: {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with $container.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $container.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- end }}

      {{- if or .Values.volumes .Values.persistence.enabled .Values.initContainer.mountFiles .Values.app.mountFiles .Values.additionalContainers }}
      volumes:
          {{- if .Values.volumes }}
          {{- with .Values.volumes }}
        {{- toYaml . | nindent 8  }}
          {{- end }}
          {{- end }}
          {{- if .Values.initContainer.mountFiles }}
          {{- range .Values.initContainer.mountFiles }}
        - name: {{ .name }}
          configMap:
            name: {{ $.Values.name }}-init-{{ .name }}-config
          {{- end }}
          {{- end }}
          {{- if .Values.app.mountFiles }}
          {{- range .Values.app.mountFiles }}
        - name: {{ .name }}
          configMap:
            name: {{ $.Values.name }}-app-{{ .name }}-config
          {{- end }}
          {{- end }}
          {{- if .Values.additionalContainers }}
          {{- range $containerName, $container := .Values.additionalContainers }}
          {{- range $container.mountFiles }}
        - name: {{ .name }}
          configMap:
            name: {{ $.Values.name }}-{{ $containerName }}-{{ .name }}-config
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.persistence.enabled }}
          {{- $appName := .Values.name }}
          {{- range .Values.persistence.storages }}
          {{- $storageAccount := .name }}
          {{- range .containers.items }}
        - name: {{ .volumeName }}
          persistentVolumeClaim:
            claimName: {{ $appName }}-{{ $storageAccount }}-{{ .name }}-pvc
          {{- end }}
          {{- end }}
          {{- end }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      {{- if and (.Values.toleration.key) (.Values.toleration.value) }}
      tolerations:
      - key: {{ .Values.toleration.key }}
        operator: "Equal"
        value: {{ .Values.toleration.value }}
        effect: "NoSchedule"
      {{- end }}

      {{- if .Values.nodeName }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: agentpool
                    operator: In
                    values:
                      - {{ .Values.nodeName }}
      {{- end }}
      enableServiceLinks: false
{{- end }}